export const VaultABI = [
  {
    type: "constructor",
    inputs: [
      { name: "_poolOwner", type: "address", internalType: "address" },
      { name: "_weth", type: "address", internalType: "address" },
      { name: "_usdc", type: "address", internalType: "address" },
      { name: "_name", type: "string", internalType: "string" },
      { name: "_symbol", type: "string", internalType: "string" },
      { name: "_marketId", type: "bytes32", internalType: "bytes32" },
    ],
    stateMutability: "nonpayable",
  },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    name: "DOMAIN_SEPARATOR",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "accumulateFees",
    inputs: [
      { name: "_amount", type: "uint256", internalType: "uint256" },
      { name: "_isLong", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      { name: "spender", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "badDebt",
    inputs: [{ name: "_isLong", type: "bool", internalType: "bool" }],
    outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batchWithdrawFees",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "collateralAmounts",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "_isLong", type: "bool", internalType: "bool" },
    ],
    outputs: [
      {
        name: "collateralAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      { name: "pendingOwner", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "executeDeposit",
    inputs: [
      {
        name: "_params",
        type: "tuple",
        internalType: "struct IVault.ExecuteDeposit",
        components: [
          {
            name: "market",
            type: "address",
            internalType: "contract IMarket",
          },
          {
            name: "vault",
            type: "address",
            internalType: "contract IVault",
          },
          {
            name: "deposit",
            type: "tuple",
            internalType: "struct Pool.Input",
            components: [
              {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "executionFee",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "owner",
                type: "address",
                internalType: "address",
              },
              {
                name: "requestTimestamp",
                type: "uint48",
                internalType: "uint48",
              },
              {
                name: "stakeDuration",
                type: "uint40",
                internalType: "uint40",
              },
              {
                name: "isLongToken",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "reverseWrap",
                type: "bool",
                internalType: "bool",
              },
              { name: "isDeposit", type: "bool", internalType: "bool" },
              { name: "key", type: "bytes32", internalType: "bytes32" },
              {
                name: "priceRequestKey",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "pnlRequestKey",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "longPrices",
            type: "tuple",
            internalType: "struct Oracle.Prices",
            components: [
              { name: "min", type: "uint256", internalType: "uint256" },
              { name: "med", type: "uint256", internalType: "uint256" },
              { name: "max", type: "uint256", internalType: "uint256" },
            ],
          },
          {
            name: "shortPrices",
            type: "tuple",
            internalType: "struct Oracle.Prices",
            components: [
              { name: "min", type: "uint256", internalType: "uint256" },
              { name: "med", type: "uint256", internalType: "uint256" },
              { name: "max", type: "uint256", internalType: "uint256" },
            ],
          },
          { name: "key", type: "bytes32", internalType: "bytes32" },
          {
            name: "longBorrowFeesUsd",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "shortBorrowFeesUsd",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "cumulativePnl",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
      { name: "_tokenIn", type: "address", internalType: "address" },
      {
        name: "_positionManager",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeWithdrawal",
    inputs: [
      {
        name: "_params",
        type: "tuple",
        internalType: "struct IVault.ExecuteWithdrawal",
        components: [
          {
            name: "market",
            type: "address",
            internalType: "contract IMarket",
          },
          {
            name: "vault",
            type: "address",
            internalType: "contract IVault",
          },
          {
            name: "withdrawal",
            type: "tuple",
            internalType: "struct Pool.Input",
            components: [
              {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "executionFee",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "owner",
                type: "address",
                internalType: "address",
              },
              {
                name: "requestTimestamp",
                type: "uint48",
                internalType: "uint48",
              },
              {
                name: "stakeDuration",
                type: "uint40",
                internalType: "uint40",
              },
              {
                name: "isLongToken",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "reverseWrap",
                type: "bool",
                internalType: "bool",
              },
              { name: "isDeposit", type: "bool", internalType: "bool" },
              { name: "key", type: "bytes32", internalType: "bytes32" },
              {
                name: "priceRequestKey",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "pnlRequestKey",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "longPrices",
            type: "tuple",
            internalType: "struct Oracle.Prices",
            components: [
              { name: "min", type: "uint256", internalType: "uint256" },
              { name: "med", type: "uint256", internalType: "uint256" },
              { name: "max", type: "uint256", internalType: "uint256" },
            ],
          },
          {
            name: "shortPrices",
            type: "tuple",
            internalType: "struct Oracle.Prices",
            components: [
              { name: "min", type: "uint256", internalType: "uint256" },
              { name: "med", type: "uint256", internalType: "uint256" },
              { name: "max", type: "uint256", internalType: "uint256" },
            ],
          },
          { name: "key", type: "bytes32", internalType: "bytes32" },
          {
            name: "longBorrowFeesUsd",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "shortBorrowFeesUsd",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "cumulativePnl",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "amountOut",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "shouldUnwrap", type: "bool", internalType: "bool" },
        ],
      },
      { name: "_tokenOut", type: "address", internalType: "address" },
      {
        name: "_positionManager",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeDistributor",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IFeeDistributor",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "feeReceiver",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "hasAllRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasAnyRole",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "_market", type: "address", internalType: "address" },
      {
        name: "_feeDistributor",
        type: "address",
        internalType: "address",
      },
      {
        name: "_rewardTracker",
        type: "address",
        internalType: "address",
      },
      {
        name: "_tradeEngine",
        type: "address",
        internalType: "address",
      },
      {
        name: "_feeReceiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "_transferGasLimit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "longAccumulatedFees",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "longTokenBalance",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "longTokensReserved",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "marketId",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nonces",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "result", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      { name: "pendingOwner", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "result", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "permit",
    inputs: [
      { name: "owner", type: "address", internalType: "address" },
      { name: "spender", type: "address", internalType: "address" },
      { name: "value", type: "uint256", internalType: "uint256" },
      { name: "deadline", type: "uint256", internalType: "uint256" },
      { name: "v", type: "uint8", internalType: "uint8" },
      { name: "r", type: "bytes32", internalType: "bytes32" },
      { name: "s", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "poolOwner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceRoles",
    inputs: [{ name: "roles", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "replaceTradeEngine",
    inputs: [
      {
        name: "_previousTradeEngine",
        type: "address",
        internalType: "address",
      },
      {
        name: "_newTradeEngine",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "revokeRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "rewardTracker",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRewardTracker",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rolesOf",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [{ name: "roles", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "shortAccumulatedFees",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "shortTokenBalance",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "shortTokensReserved",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalAvailableLiquidity",
    inputs: [{ name: "_isLong", type: "bool", internalType: "bool" }],
    outputs: [{ name: "total", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      { name: "to", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      { name: "from", type: "address", internalType: "address" },
      { name: "to", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferGasLimit",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOutTokens",
    inputs: [
      { name: "_to", type: "address", internalType: "address" },
      { name: "_amount", type: "uint256", internalType: "uint256" },
      { name: "_isLongToken", type: "bool", internalType: "bool" },
      { name: "_shouldUnwrap", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "updateCollateralAmount",
    inputs: [
      { name: "_amount", type: "uint256", internalType: "uint256" },
      { name: "_user", type: "address", internalType: "address" },
      { name: "_isLong", type: "bool", internalType: "bool" },
      { name: "_isIncrease", type: "bool", internalType: "bool" },
      { name: "_isFullClose", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateLiquidityReservation",
    inputs: [
      { name: "_amount", type: "uint256", internalType: "uint256" },
      { name: "_isLong", type: "bool", internalType: "bool" },
      { name: "_isIncrease", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updatePoolBalance",
    inputs: [
      { name: "_amount", type: "uint256", internalType: "uint256" },
      { name: "_isLong", type: "bool", internalType: "bool" },
      { name: "_isIncrease", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BadDebtCreated",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isLong",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DepositExecuted",
    inputs: [
      {
        name: "key",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "mintAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isLongToken",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FeesAccumulated",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isLong",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FeesWithdrawn",
    inputs: [
      {
        name: "longFees",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "shortFees",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "HoldingTokens",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RolesUpdated",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "roles",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Vault_HoldingTokens",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WithdrawalExecuted",
    inputs: [
      {
        name: "key",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOut",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isLongToken",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AlreadyInitialized", inputs: [] },
  { type: "error", name: "MarketUtils_AmountTooSmall", inputs: [] },
  { type: "error", name: "NewOwnerIsZeroAddress", inputs: [] },
  { type: "error", name: "NoHandoverRequest", inputs: [] },
  { type: "error", name: "Reentrancy", inputs: [] },
  { type: "error", name: "Unauthorized", inputs: [] },
  { type: "error", name: "Vault_AccessDenied", inputs: [] },
  { type: "error", name: "Vault_AlreadyInitialized", inputs: [] },
  {
    type: "error",
    name: "Vault_InsufficientAvailableTokens",
    inputs: [],
  },
  { type: "error", name: "Vault_InvalidDeposit", inputs: [] },
  { type: "error", name: "Vault_InvalidWithdrawal", inputs: [] },
] as const;
