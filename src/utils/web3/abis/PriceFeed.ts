export const PriceFeedABI = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_marketFactory",
        type: "address",
        internalType: "address",
      },
      { name: "_weth", type: "address", internalType: "address" },
      { name: "_link", type: "address", internalType: "address" },
      { name: "_pyth", type: "address", internalType: "address" },
      { name: "_subId", type: "uint64", internalType: "uint64" },
      { name: "_donId", type: "bytes32", internalType: "bytes32" },
      {
        name: "_functionsRouter",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "LINK",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PRICE_DECIMALS",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "WETH",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "callbackGasLimit",
    inputs: [],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "clearInvalidRequest",
    inputs: [{ name: "_requestId", type: "bytes32", internalType: "bytes32" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      { name: "pendingOwner", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "encryptedSecretsUrls",
    inputs: [],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fastFulfillRequest",
    inputs: [
      { name: "requestId", type: "bytes32", internalType: "bytes32" },
      { name: "response", type: "bytes", internalType: "bytes" },
      { name: "err", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fullfillmentAttempted",
    inputs: [{ name: "requestKey", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "attempted", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "gasOverhead",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLastPrice",
    inputs: [{ name: "_ticker", type: "string", internalType: "string" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPriceFeed.Price",
        components: [
          { name: "ticker", type: "bytes15", internalType: "bytes15" },
          { name: "precision", type: "uint8", internalType: "uint8" },
          { name: "variance", type: "uint16", internalType: "uint16" },
          { name: "timestamp", type: "uint48", internalType: "uint48" },
          { name: "med", type: "uint64", internalType: "uint64" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPrices",
    inputs: [
      { name: "_ticker", type: "string", internalType: "string" },
      { name: "_timestamp", type: "uint48", internalType: "uint48" },
    ],
    outputs: [
      {
        name: "signedPrices",
        type: "tuple",
        internalType: "struct IPriceFeed.Price",
        components: [
          { name: "ticker", type: "bytes15", internalType: "bytes15" },
          { name: "precision", type: "uint8", internalType: "uint8" },
          { name: "variance", type: "uint16", internalType: "uint16" },
          { name: "timestamp", type: "uint48", internalType: "uint48" },
          { name: "med", type: "uint64", internalType: "uint64" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequestData",
    inputs: [{ name: "_requestKey", type: "bytes32", internalType: "bytes32" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPriceFeed.RequestData",
        components: [
          {
            name: "requester",
            type: "address",
            internalType: "address",
          },
          {
            name: "blockTimestamp",
            type: "uint48",
            internalType: "uint48",
          },
          { name: "args", type: "string[]", internalType: "string[]" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequestTimestamp",
    inputs: [{ name: "_requestKey", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequester",
    inputs: [{ name: "_requestId", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequests",
    inputs: [],
    outputs: [{ name: "", type: "bytes32[]", internalType: "bytes32[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSecondaryStrategy",
    inputs: [{ name: "_ticker", type: "string", internalType: "string" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPriceFeed.SecondaryStrategy",
        components: [
          { name: "exists", type: "bool", internalType: "bool" },
          {
            name: "feedType",
            type: "uint8",
            internalType: "enum IPriceFeed.FeedType",
          },
          {
            name: "feedAddress",
            type: "address",
            internalType: "address",
          },
          { name: "feedId", type: "bytes32", internalType: "bytes32" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "handleOracleFulfillment",
    inputs: [
      { name: "requestId", type: "bytes32", internalType: "bytes32" },
      { name: "response", type: "bytes", internalType: "bytes" },
      { name: "err", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasAllRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasAnyRole",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "idToKey",
    inputs: [{ name: "requestId", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "requestKey", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_priceUpdateSource",
        type: "string",
        internalType: "string",
      },
      {
        name: "_gasOverhead",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_callbackGasLimit",
        type: "uint32",
        internalType: "uint32",
      },
      { name: "_premiumFee", type: "uint256", internalType: "uint256" },
      {
        name: "_sequencerUptimeFeed",
        type: "address",
        internalType: "address",
      },
      {
        name: "_timeToExpiration",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isRequestValid",
    inputs: [{ name: "_requestKey", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isValidAsset",
    inputs: [{ name: "_ticker", type: "string", internalType: "string" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "keyToId",
    inputs: [{ name: "requestKey", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "requestId", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "marketFactory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IMarketFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "result", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      { name: "pendingOwner", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "result", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "premiumFee",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "priceUpdateRequested",
    inputs: [{ name: "_requestId", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pyth",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceRoles",
    inputs: [{ name: "roles", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestPriceUpdate",
    inputs: [
      { name: "args", type: "string[]", internalType: "string[]" },
      { name: "_requester", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "revokeRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "rolesOf",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [{ name: "roles", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "sequencerUptimeFeed",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setEncryptedSecretUrls",
    inputs: [
      {
        name: "_encryptedSecretsUrls",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTimeToExpiration",
    inputs: [
      {
        name: "_timeToExpiration",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportAsset",
    inputs: [
      { name: "_ticker", type: "string", internalType: "string" },
      {
        name: "_strategy",
        type: "tuple",
        internalType: "struct IPriceFeed.SecondaryStrategy",
        components: [
          { name: "exists", type: "bool", internalType: "bool" },
          {
            name: "feedType",
            type: "uint8",
            internalType: "enum IPriceFeed.FeedType",
          },
          {
            name: "feedAddress",
            type: "address",
            internalType: "address",
          },
          { name: "feedId", type: "bytes32", internalType: "bytes32" },
        ],
      },
      { name: "_tokenDecimals", type: "uint8", internalType: "uint8" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "timeToExpiration",
    inputs: [],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenDecimals",
    inputs: [{ name: "ticker", type: "string", internalType: "string" }],
    outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "unsupportAsset",
    inputs: [{ name: "_ticker", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateBillingParameters",
    inputs: [
      { name: "_subId", type: "uint64", internalType: "uint64" },
      { name: "_donId", type: "bytes32", internalType: "bytes32" },
      {
        name: "_gasOverhead",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_callbackGasLimit",
        type: "uint32",
        internalType: "uint32",
      },
      { name: "_premiumFee", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateChainlinkFunction",
    inputs: [
      {
        name: "_priceUpdateSource",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateDataFeeds",
    inputs: [
      { name: "_pyth", type: "address", internalType: "address" },
      {
        name: "_sequencerUptimeFeed",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateSecondaryStrategy",
    inputs: [
      { name: "_ticker", type: "string", internalType: "string" },
      {
        name: "_strategy",
        type: "tuple",
        internalType: "struct IPriceFeed.SecondaryStrategy",
        components: [
          { name: "exists", type: "bool", internalType: "bool" },
          {
            name: "feedType",
            type: "uint8",
            internalType: "enum IPriceFeed.FeedType",
          },
          {
            name: "feedAddress",
            type: "address",
            internalType: "address",
          },
          { name: "feedId", type: "bytes32", internalType: "bytes32" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawEthForSettlement",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AssetSupported",
    inputs: [
      {
        name: "ticker",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "tokenDecimals",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PriceUpdateRequested",
    inputs: [
      {
        name: "requestId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "args",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PriceUpdated",
    inputs: [
      {
        name: "ticker",
        type: "bytes15",
        indexed: true,
        internalType: "bytes15",
      },
      {
        name: "timestamp",
        type: "uint48",
        indexed: true,
        internalType: "uint48",
      },
      {
        name: "medianPrice",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
      {
        name: "variance",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RequestFulfilled",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RequestSent",
    inputs: [
      {
        name: "id",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Response",
    inputs: [
      {
        name: "requestId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "requestData",
        type: "tuple",
        indexed: false,
        internalType: "struct IPriceFeed.RequestData",
        components: [
          {
            name: "requester",
            type: "address",
            internalType: "address",
          },
          {
            name: "blockTimestamp",
            type: "uint48",
            internalType: "uint48",
          },
          { name: "args", type: "string[]", internalType: "string[]" },
        ],
      },
      {
        name: "response",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "err",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RolesUpdated",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "roles",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SupportRemoved",
    inputs: [
      {
        name: "ticker",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AlreadyInitialized", inputs: [] },
  { type: "error", name: "EmptyArgs", inputs: [] },
  { type: "error", name: "EmptySecrets", inputs: [] },
  { type: "error", name: "EmptySource", inputs: [] },
  { type: "error", name: "NewOwnerIsZeroAddress", inputs: [] },
  { type: "error", name: "NoHandoverRequest", inputs: [] },
  { type: "error", name: "NoInlineSecrets", inputs: [] },
  { type: "error", name: "OnlyRouterCanFulfill", inputs: [] },
  { type: "error", name: "Oracle_InvalidReferenceQuery", inputs: [] },
  { type: "error", name: "Oracle_SequencerDown", inputs: [] },
  { type: "error", name: "PriceFeed_AlreadyInitialized", inputs: [] },
  { type: "error", name: "PriceFeed_AssetRemovalFailed", inputs: [] },
  { type: "error", name: "PriceFeed_AssetSupportFailed", inputs: [] },
  { type: "error", name: "PriceFeed_FailedToClearRequest", inputs: [] },
  { type: "error", name: "PriceFeed_InvalidArgsLength", inputs: [] },
  { type: "error", name: "PriceFeed_InvalidMarket", inputs: [] },
  { type: "error", name: "PriceFeed_InvalidRequestType", inputs: [] },
  {
    type: "error",
    name: "PriceFeed_InvalidResponseLength",
    inputs: [],
  },
  { type: "error", name: "PriceFeed_PriceExpired", inputs: [] },
  {
    type: "error",
    name: "PriceFeed_PriceRequired",
    inputs: [{ name: "ticker", type: "string", internalType: "string" }],
  },
  { type: "error", name: "PriceFeed_PriceUpdateLength", inputs: [] },
  {
    type: "error",
    name: "PriceFeed_RequestAlreadyFulfilled",
    inputs: [],
  },
  { type: "error", name: "PriceFeed_RequestNotFound", inputs: [] },
  { type: "error", name: "PriceFeed_SwapFailed", inputs: [] },
  { type: "error", name: "PriceFeed_ZeroBalance", inputs: [] },
  { type: "error", name: "Reentrancy", inputs: [] },
  { type: "error", name: "Unauthorized", inputs: [] },
] as const;
