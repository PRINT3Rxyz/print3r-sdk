export const TradeEngineABI = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_tradeStorage",
        type: "address",
        internalType: "address",
      },
      { name: "_market", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "adlFee",
    inputs: [],
    outputs: [{ name: "", type: "uint64", internalType: "uint64" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "completeOwnershipHandover",
    inputs: [
      { name: "pendingOwner", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "executeAdl",
    inputs: [
      { name: "_id", type: "bytes32", internalType: "MarketId" },
      {
        name: "_positionKey",
        type: "bytes32",
        internalType: "bytes32",
      },
      { name: "_requestKey", type: "bytes32", internalType: "bytes32" },
      { name: "_feeReceiver", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executePositionRequest",
    inputs: [
      { name: "_id", type: "bytes32", internalType: "MarketId" },
      {
        name: "_params",
        type: "tuple",
        internalType: "struct Position.Settlement",
        components: [
          {
            name: "request",
            type: "tuple",
            internalType: "struct Position.Request",
            components: [
              {
                name: "input",
                type: "tuple",
                internalType: "struct Position.Input",
                components: [
                  {
                    name: "ticker",
                    type: "string",
                    internalType: "string",
                  },
                  {
                    name: "collateralToken",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "collateralDelta",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "sizeDelta",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "limitPrice",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "maxSlippage",
                    type: "uint128",
                    internalType: "uint128",
                  },
                  {
                    name: "executionFee",
                    type: "uint64",
                    internalType: "uint64",
                  },
                  {
                    name: "isLong",
                    type: "bool",
                    internalType: "bool",
                  },
                  {
                    name: "isLimit",
                    type: "bool",
                    internalType: "bool",
                  },
                  {
                    name: "isIncrease",
                    type: "bool",
                    internalType: "bool",
                  },
                  {
                    name: "reverseWrap",
                    type: "bool",
                    internalType: "bool",
                  },
                  {
                    name: "triggerAbove",
                    type: "bool",
                    internalType: "bool",
                  },
                ],
              },
              {
                name: "user",
                type: "address",
                internalType: "address",
              },
              {
                name: "requestTimestamp",
                type: "uint48",
                internalType: "uint48",
              },
              {
                name: "requestType",
                type: "uint8",
                internalType: "enum Position.RequestType",
              },
              {
                name: "requestKey",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "stopLossKey",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "takeProfitKey",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "orderKey",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "limitRequestKey",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "feeReceiver",
            type: "address",
            internalType: "address",
          },
          { name: "isAdl", type: "bool", internalType: "bool" },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Execution.FeeState",
        components: [
          {
            name: "afterFeeAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fundingFee",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "borrowFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "positionFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "feeForExecutor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "affiliateRebate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "realizedPnl",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "amountOwedToUser",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "feesToAccumulate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrer",
            type: "address",
            internalType: "address",
          },
          { name: "isLiquidation", type: "bool", internalType: "bool" },
          { name: "isFullDecrease", type: "bool", internalType: "bool" },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct Position.Request",
        components: [
          {
            name: "input",
            type: "tuple",
            internalType: "struct Position.Input",
            components: [
              {
                name: "ticker",
                type: "string",
                internalType: "string",
              },
              {
                name: "collateralToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "collateralDelta",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "sizeDelta",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "limitPrice",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "maxSlippage",
                type: "uint128",
                internalType: "uint128",
              },
              {
                name: "executionFee",
                type: "uint64",
                internalType: "uint64",
              },
              { name: "isLong", type: "bool", internalType: "bool" },
              { name: "isLimit", type: "bool", internalType: "bool" },
              {
                name: "isIncrease",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "reverseWrap",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "triggerAbove",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          { name: "user", type: "address", internalType: "address" },
          {
            name: "requestTimestamp",
            type: "uint48",
            internalType: "uint48",
          },
          {
            name: "requestType",
            type: "uint8",
            internalType: "enum Position.RequestType",
          },
          {
            name: "requestKey",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "stopLossKey",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "takeProfitKey",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeForExecution",
    inputs: [],
    outputs: [{ name: "", type: "uint64", internalType: "uint64" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "hasAllRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasAnyRole",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "_priceFeed", type: "address", internalType: "address" },
      {
        name: "_referralStorage",
        type: "address",
        internalType: "address",
      },
      {
        name: "_positionManager",
        type: "address",
        internalType: "address",
      },
      {
        name: "_minCollateralUsd",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_liquidationFee",
        type: "uint64",
        internalType: "uint64",
      },
      { name: "_adlFee", type: "uint64", internalType: "uint64" },
      { name: "_tradingFee", type: "uint64", internalType: "uint64" },
      {
        name: "_feeForExecution",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidatePosition",
    inputs: [
      { name: "_id", type: "bytes32", internalType: "MarketId" },
      {
        name: "_positionKey",
        type: "bytes32",
        internalType: "bytes32",
      },
      { name: "_requestKey", type: "bytes32", internalType: "bytes32" },
      { name: "_liquidator", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidationFee",
    inputs: [],
    outputs: [{ name: "", type: "uint64", internalType: "uint64" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "minCollateralUsd",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "result", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownershipHandoverExpiresAt",
    inputs: [
      { name: "pendingOwner", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "result", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceRoles",
    inputs: [{ name: "roles", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestOwnershipHandover",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "revokeRoles",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "roles", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "rolesOf",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [{ name: "roles", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tradingFee",
    inputs: [],
    outputs: [{ name: "", type: "uint64", internalType: "uint64" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "updateFees",
    inputs: [
      {
        name: "_minCollateralUsd",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_liquidationFee",
        type: "uint64",
        internalType: "uint64",
      },
      { name: "_adlFee", type: "uint64", internalType: "uint64" },
      { name: "_tradingFee", type: "uint64", internalType: "uint64" },
      {
        name: "_feeForExecution",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updatePriceFeed",
    inputs: [
      {
        name: "_priceFeed",
        type: "address",
        internalType: "contract IPriceFeed",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AdlExecuted",
    inputs: [
      {
        name: "positionKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "marketId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "sizeDelta",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isLong",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ClosePosition",
    inputs: [
      {
        name: "positionKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "marketId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "ticker",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "size",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "collateral",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "avgEntryPrice",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "exitPrice",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isLong",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CollateralEdited",
    inputs: [
      {
        name: "positionKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "marketId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "collateralDelta",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isIncrease",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DecreasePosition",
    inputs: [
      {
        name: "positionKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "marketId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "collateralDelta",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "sizeDelta",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "IncreasePosition",
    inputs: [
      {
        name: "positionKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "marketId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "collateralDelta",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "sizeDelta",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiquidatePosition",
    inputs: [
      {
        name: "positionKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "marketId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "ticker",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "averageEntryPrice",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "liquidationPrice",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "liquidatedCollateral",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isLong",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverCanceled",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipHandoverRequested",
    inputs: [
      {
        name: "pendingOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "oldOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PositionCreated",
    inputs: [
      {
        name: "positionKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "marketId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "owner",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "sizeDelta",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isLong",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RolesUpdated",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "roles",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AlreadyInitialized", inputs: [] },
  { type: "error", name: "Execution_FeesExceedCollateral", inputs: [] },
  {
    type: "error",
    name: "Execution_FeesExceedCollateralDelta",
    inputs: [],
  },
  { type: "error", name: "Execution_InvalidPosition", inputs: [] },
  { type: "error", name: "Execution_LiquidatablePosition", inputs: [] },
  {
    type: "error",
    name: "Execution_MinCollateralThreshold",
    inputs: [],
  },
  { type: "error", name: "Execution_PositionExists", inputs: [] },
  { type: "error", name: "Execution_ZeroFees", inputs: [] },
  {
    type: "error",
    name: "MarketUtils_InsufficientFreeLiquidity",
    inputs: [],
  },
  { type: "error", name: "MathUtils_InputTooSmall", inputs: [] },
  {
    type: "error",
    name: "MathUtils_IntOverflow",
    inputs: [
      { name: "x", type: "int256", internalType: "int256" },
      { name: "y", type: "int256", internalType: "int256" },
    ],
  },
  { type: "error", name: "NewOwnerIsZeroAddress", inputs: [] },
  { type: "error", name: "NoHandoverRequest", inputs: [] },
  { type: "error", name: "Position_BelowMinLeverage", inputs: [] },
  { type: "error", name: "Position_CollateralExceedsSize", inputs: [] },
  { type: "error", name: "Position_OverMaxLeverage", inputs: [] },
  { type: "error", name: "Reentrancy", inputs: [] },
  { type: "error", name: "TradeEngine_AlreadyInitialized", inputs: [] },
  { type: "error", name: "TradeEngine_InvalidCaller", inputs: [] },
  { type: "error", name: "TradeEngine_InvalidRequestType", inputs: [] },
  {
    type: "error",
    name: "TradeEngine_PositionDoesNotExist",
    inputs: [],
  },
  {
    type: "error",
    name: "TradeEngine_PositionNotLiquidatable",
    inputs: [],
  },
  { type: "error", name: "Unauthorized", inputs: [] },
] as const;
